'''
Creator: Andric Quinn S. Baticos
Section: CMSC 11 G-1L
Student Number: 2015-13764
Description: This file contains the functions for the cmd design of the game - Sudoku
'''

#	START --- LIST OF IMPORTS
import os, random, time
clear = lambda: os.system('clear')
#	END --- END OF LIST OF IMPORTS

# 	START - LIST OF FUNCTIONS

def menu1():
	clear()
	for i in range (0, 18):
		print()
	print ("\t      ███████╗██╗   ██╗██████╗  ██████╗ ██╗  ██╗██╗   ██╗ ")
	print ("\t      ██╔════╝██║   ██║██╔══██╗██╔═══██╗██║ ██╔╝██║   ██║ ")
	print ("\t      ███████╗██║   ██║██║  ██║██║   ██ █████╔╝ ██║   ██║ ")
	print ("\t      ╚════██║██║   ██║██║  ██║██║   ██║██╔═██╗ ██║   ██║ ")
	print ("\t      ███████║╚██████╔╝██████╔╝╚██████╔╝██║  ██╗╚██████╔╝ ")
	print ("\t      ╚══════╝ ╚═════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ")
	print ("\t\t\t██████╗  ██████╗  ██╗ ██████╗ ")
	print ("\t\t\t╚════██╗██╔═████╗███║██╔════╝ ")
	print ("\t\t\t █████╔╝██║██╔██║╚██║███████╗ ")
	print ("\t\t\t██╔═══╝ ████╔╝██║ ██║██╔═══██╗")
	print ("\t\t\t███████╗╚██████╔╝ ██║╚██████╔╝")
	print ("\t\t\t╚══════╝ ╚═════╝  ╚═╝ ╚═════╝ ")
	print()
	time.sleep(1)
	print('\t      =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	time.sleep(0.5)
	print('\t\t\t     [1] START GAME')
	time.sleep(0.5)
	print('\t\t\t     [2] HOW TO PLAY')
	time.sleep(0.5)
	print('\t\t\t     [3] ABOUT THE GAME')
	time.sleep(0.5)
	print('\t\t\t     [4] EXIT')
	time.sleep(0.5)
	print('\t      =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	time.sleep(0.5)
	return input ('\t\t\t>> ')

def menu2():
	clear()
	for i in range (0, 18):
		print()
	print ("\t      ███████╗██╗   ██╗██████╗  ██████╗ ██╗  ██╗██╗   ██╗ ")
	print ("\t      ██╔════╝██║   ██║██╔══██╗██╔═══██╗██║ ██╔╝██║   ██║ ")
	print ("\t      ███████╗██║   ██║██║  ██║██║   ██ █████╔╝ ██║   ██║ ")
	print ("\t      ╚════██║██║   ██║██║  ██║██║   ██║██╔═██╗ ██║   ██║ ")
	print ("\t      ███████║╚██████╔╝██████╔╝╚██████╔╝██║  ██╗╚██████╔╝ ")
	print ("\t      ╚══════╝ ╚═════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═╝ ╚═════╝  ")
	print ("\t\t\t██████╗  ██████╗  ██╗ ██████╗ ")
	print ("\t\t\t╚════██╗██╔═████╗███║██╔════╝ ")
	print ("\t\t\t █████╔╝██║██╔██║╚██║███████╗ ")
	print ("\t\t\t██╔═══╝ ████╔╝██║ ██║██╔═══██╗")
	print ("\t\t\t███████╗╚██████╔╝ ██║╚██████╔╝")
	print ("\t\t\t╚══════╝ ╚═════╝  ╚═╝ ╚═════╝ ")
	print()
	print('\t      =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	print('\t\t\t     [1] START GAME')
	print('\t\t\t     [2] HOW TO PLAY')
	print('\t\t\t     [3] ABOUT THE GAME')
	print('\t\t\t     [4] EXIT')
	print('\t      =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	return input ('\t\t\t>> ')

def difficulty1():
	clear()
	for i in range (0,6):
		print()
	print("\t\t\t─────────────────────────────▄██▄")
	time.sleep(0.01)
	print("\t\t\t─────────────────────────────▀███")
	time.sleep(0.01)
	print("\t\t\t────────────────────────────────█")
	time.sleep(0.01)
	print("\t\t\t───────────────▄▄▄▄▄────────────█")
	time.sleep(0.01)
	print("\t\t\t──────────────▀▄────▀▄──────────█")
	time.sleep(0.01)
	print("\t\t\t──────────▄▀▀▀▄─█▄▄▄▄█▄▄─▄▀▀▀▄──█")
	time.sleep(0.01)
	print("\t\t\t─────────█──▄──█────────█───▄─█─█")
	time.sleep(0.01)
	print("\t\t\t─────────▀▄───▄▀────────▀▄───▄▀─█")
	time.sleep(0.01)
	print("\t\t\t──────────█▀▀▀────────────▀▀▀─█─█")
	time.sleep(0.01)
	print("\t\t\t──────────█───────────────────█─█")
	time.sleep(0.01)
	print("\t\t\t▄▀▄▄▀▄────█──▄█▀█▀█▀█▀█▀█▄────█─█")
	time.sleep(0.01)
	print("\t\t\t█▒▒▒▒█────█──█████████████▄───█─█")
	time.sleep(0.01)
	print("\t\t\t█▒▒▒▒█────█──██████████████▄──█─█")
	time.sleep(0.01)
	print("\t\t\t█▒▒▒▒█────█───██████████████▄─█─█")
	time.sleep(0.01)
	print("\t\t\t█▒▒▒▒█────█────██████████████─█─█")
	time.sleep(0.01)
	print("\t\t\t█▒▒▒▒█────█───██████████████▀─█─█")
	time.sleep(0.01)
	print("\t\t\t█▒▒▒▒█───██───██████████████──█─█")
	time.sleep(0.01)
	print("\t\t\t▀████▀──██▀█──█████████████▀──█▄█")
	time.sleep(0.01)
	print("\t\t\t──██───██──▀█──█▄█▄█▄█▄█▄█▀──▄█▀")
	time.sleep(0.01)
	print("\t\t\t──██──██────▀█─────────────▄▀▓█")
	time.sleep(0.01)
	print("\t\t\t──██─██──────▀█▀▄▄▄▄▄▄▄▄▄▀▀▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──████────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──███─────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──██──────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──██──────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──██─────────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──██────────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	time.sleep(0.01)
	print("\t\t\t──██───────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	time.sleep(0.01)
	print("\t\t\t──██──────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	time.sleep(0.01)
	print("\t\t\t──██─────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	time.sleep(0.01)
	print("\t\t\t──██────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	time.sleep(0.5)
	print("")
	print('\t\t\t\tCHOOSE DIFFICULTY:')
	time.sleep(0.5)
	print('\t\t\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	time.sleep(0.5)
	print('\t\t\t[1] NOOB (EASY)')
	time.sleep(0.5)
	print('\t\t\t[2] HOMO SAPIENS (AVERAGE)')
	time.sleep(0.5)
	print('\t\t\t[3] UP STUDENT (HARD)')
	time.sleep(0.5)
	print('\t\t\t[4] CHALLENGE (INSANE)')
	time.sleep(0.5)
	print('\t\t\t[5] GO BACK')
	time.sleep(0.5)
	print('\t\t\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	time.sleep(0.5)
	return input ('\t\t\t>> ')

def difficulty2():
	clear()
	for i in range (0,6):
		print()
	print("\t\t\t─────────────────────────────▄██▄")
	print("\t\t\t─────────────────────────────▀███")
	print("\t\t\t────────────────────────────────█")
	print("\t\t\t───────────────▄▄▄▄▄────────────█")
	print("\t\t\t──────────────▀▄────▀▄──────────█")
	print("\t\t\t──────────▄▀▀▀▄─█▄▄▄▄█▄▄─▄▀▀▀▄──█")
	print("\t\t\t─────────█──▄──█────────█───▄─█─█")
	print("\t\t\t─────────▀▄───▄▀────────▀▄───▄▀─█")
	print("\t\t\t──────────█▀▀▀────────────▀▀▀─█─█")
	print("\t\t\t──────────█───────────────────█─█")
	print("\t\t\t▄▀▄▄▀▄────█──▄█▀█▀█▀█▀█▀█▄────█─█")
	print("\t\t\t█▒▒▒▒█────█──█████████████▄───█─█")
	print("\t\t\t█▒▒▒▒█────█──██████████████▄──█─█")
	print("\t\t\t█▒▒▒▒█────█───██████████████▄─█─█")
	print("\t\t\t█▒▒▒▒█────█────██████████████─█─█")
	print("\t\t\t█▒▒▒▒█────█───██████████████▀─█─█")
	print("\t\t\t█▒▒▒▒█───██───██████████████──█─█")
	print("\t\t\t▀████▀──██▀█──█████████████▀──█▄█")
	print("\t\t\t──██───██──▀█──█▄█▄█▄█▄█▄█▀──▄█▀")
	print("\t\t\t──██──██────▀█─────────────▄▀▓█")
	print("\t\t\t──██─██──────▀█▀▄▄▄▄▄▄▄▄▄▀▀▓▓▓█")
	print("\t\t\t──████────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	print("\t\t\t──███─────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	print("\t\t\t──██──────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	print("\t\t\t──██──────────█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	print("\t\t\t──██─────────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	print("\t\t\t──██────────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█")
	print("\t\t\t──██───────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	print("\t\t\t──██──────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	print("\t\t\t──██─────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	print("\t\t\t──██────▐█▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓█▌")
	print("")
	print('\t\t\t\tCHOOSE DIFFICULTY:')
	print('\t\t\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	print('\t\t\t[1] NOOB (EASY)')
	print('\t\t\t[2] HOMO SAPIENS (AVERAGE)')
	print('\t\t\t[3] UP STUDENT (HARD)')
	print('\t\t\t[4] CHALLENGE (INSANE)')
	print('\t\t\t[5] GO BACK')
	print('\t\t\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	return input ('\t\t\t>> ')

def boardMenu():
	print()
	print("\t\t\t[1] ADD/REPLACE NUMBER")
	print("\t\t\t[2] DELETE NUMBER")
	print("\t\t\t[3] RESET BOARD")
	print("\t\t\t[4] SAVE BOARD (INOPERATIVE)")
	print("\t\t\t[5] EXIT GAME")
	print()
	print('\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	return input ("\t>> ")

def continueGame():
	clear()
	print()
	print("--------------------------------------------------------------------------------")
	print('\tNOTE!')
	print('\tFor better gaming experience, make sure that your command line\n\tinterface is maximized.')
	print()
	print("--------------------------------------------------------------------------------")
	print('\t\t\t\t  START GAME')
	print('\t\t\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	print('\t\t\t[1] NEW GAME')
	print('\t\t\t[2] CONTINUE GAME (INOPERATIVE)')
	print('\t\t\t[3] GO BACK')
	print('\t\t\t=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=')
	return input ('\t\t\t>> ')

def howToPlay():
	clear()
	page = 1
	max_page = 3
	viewingHowTo = True
	while viewingHowTo:
		clear()
		for i in range (0,20):
			print()
		print("--------------------------------------------------------------------------------")
		print('\tHOW TO PLAY')
		print()
		if page == 1:
			print('\tA classic sudoku puzzle is made up of a 9-by-9 grid with nine 3-by-3\n\tsub-grids called boxes. There are 9 rows, 9 columns, and 9 boxes in\n\tevery puzzle.')
		elif page == 2:
			print('\tThe object of the game is to fill all squares in the grid\n\twith the correct number. The rules are:')
			print()
			print('\to Every row, column and box must contain all the digits 1 to 9.')
			print('\to Each number can only appear once in every row, column, or box.')
		elif page == 3:
			print('\tEvery puzzle has only one correct solution!')
		print()
		print("\t\t\t\tPage:", page, "/", max_page)
		print("--------------------------------------------------------------------------------")
		if page == max_page:
			input ("\t\t\tPress <ENTER> to EXIT")
			break
		else:
			input ("\t\t\tPress <ENTER> to CONTINUE")
		page = page + 1

def aboutTheGame():
	viewingAbout = True
	while viewingAbout:
		clear()
		for i in range (0,6):
			print()
		print("--------------------------------------------------------------------------------")
		print('\tABOUT THE GAME')
		print()
		print(' \tCopyright (C) 2016, Andric Quinn S. Baticos <asbaticos@up.edu.ph>')
		print()
		print(' \tIn partial fulfillment for Computer Science 11 - Introduction\n\tto Computer Science project Second Semester 2015-2016')
		print()
		print(" \t(Made and presented on the 13th day of May, Friday\n\tto Ma'am Katherine Tan)")
		print()
		print(" \tSUDOKU 2016 aims to enhance the gamer's critical analysis\n\tand thinking skills by providing boards of different levels and sizes.")
		print()
		print(" \tCreated and conceptualized by Andric Quinn Baticos, a first-year\n\tBS Computer Science student of UPLB, the game mechanics\n\twere revised in accordance to the project specifications given\n\tby the advisers.")
		print()
		print("--------------------------------------------------------------------------------")
		print(' \tACKNOWLEDGEMENTS')
		print()
		print("\tI would like to thank EJ Fria for helping me with the\n\tconceptualization of the project, and Ma'am Katherine Tan for\n\ther moral support and assistance in creating this project.")
		print()
		print("\tI would also like to thank my friends who helped me and who was\n\tmy inspiration in creating this project. To all the beta testers,\n\tthank you for participating and sharing your time with the\n\texamination of the program. Your suggestions and comments has helped\n\ta lot with the development of this project.")
		print()
		print("--------------------------------------------------------------------------------")
		print(' \tSOURCES')
		print()
		print(' \tsudoku-download.net')
		print(' \tThe website contained PDF files, offering free downloadable sudoku\n\tboards. All the boards in the game were from this website.')
		print()
		print(' \tpatorjk.com')
		print(' \tThe website was used to create the ASCII design now used at the\n\tterminal. Some of the ASCII are from the website, too.')
		print()
		print("--------------------------------------------------------------------------------")
		input ("\t\t\t  Press <ENTER> to EXIT")
		break

#	END LIST OF FUNCTIONS

#========================================================TEST CANVAS FOR CODES================================================================#